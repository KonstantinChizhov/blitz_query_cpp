import os

env = Environment()

env['CCCOMSTR'] = "Compiling C: $TARGET"
env['CXXCOMSTR'] = "Compiling C++: $TARGET"
env['ASCOMSTR'] = "Assembling: $TARGET"
env['ASPPCOMSTR'] = "Assembling: $TARGET"
env['LINKCOMSTR'] = "Linking: $TARGET"

if env['CC'] == 'gcc':
    env.Append(CXXFLAGS=['-std=gnu++17', '-O0', '-g'])


if env['CC'] == 'cl':
    env.Append(CXXFLAGS=['/Zi', '/wd4503', '/wd4530', '/std:c++20'])
    env.Append(CPPDEFINES=['_VARIADIC_MAX=15'])
    env.Append(LINKFLAGS=['/DEBUG:FULL'])


if env['PLATFORM'] == 'win32' and (env.Detect('mingw32-gcc') or env.Detect('gcc')):
    env.Append(CPPDEFINES={'GTEST_OS_WINDOWS': '1', 'GTEST_HAS_PTHREAD': '0',
               'EMULATE_GLIBC': '1', '_EMULATE_GLIBC': '1'})


env.Append(CPPPATH=['#/./',
                    '#inc',
                    '#3rd-party/googletest/googletest/include',
                    '#3rd-party/googletest/googletest',
                    '#3rd-party/googletest/googlemock/include',
                    '#3rd-party/googletest/googlemock', ])


testSources = env.Glob('#/tests/unit/*.cpp')
libSources = env.Glob('#/src/*.cpp')
objSuffix = env['OBJSUFFIX']
objects = []

for src in testSources:
    fname = os.path.splitext(os.path.basename(src.abspath))[0]
    obj = env.Object(f'#build/{fname}{objSuffix}', src)
    objects.append(obj)

for src in libSources:
    fname = os.path.splitext(os.path.basename(src.abspath))[0]
    obj = env.Object(f'#build/tests_{fname}{objSuffix}', src)
    objects.append(obj)


objects.append(env.Object(f'#build/gmock_main{objSuffix}',
                          '#3rd-party/googletest/googlemock/src/gmock_main.cc'))
objects.append(env.Object(f'#build/gtest-all{objSuffix}',
                          '#3rd-party/googletest/googletest/src/gtest-all.cc'))
objects.append(env.Object(f'#build/gmock-all{objSuffix}',
                          '#3rd-party/googletest/googlemock/src/gmock-all.cc'))

tests = env.Program('blitz_query_cpp_test', objects)

env.Alias("unit_tests", [tests])
